
spring:
  ## 数据库配置
  datasource:
    url: jdbc:mysql://localhost:3306/miaosha?useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    #druid
    type: com.alibaba.druid.pool.DruidDataSource # 设置类型为 DruidDataSource
    # Druid 自定义配置，对应 DruidDataSource 中的 setting 方法的属性
    druid:
      min-idle: 0 # 池中维护的最小空闲连接数，默认为 0 个。
      max-active: 20 # 池中最大连接数，包括闲置和使用中的连接，默认为 8 个。
      filter:
        stat: # 配置 StatFilter ，对应文档 https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatFilter
          log-slow-sql: true # 开启慢查询记录
          slow-sql-millis: 5000 # 慢 SQL 的标准，单位：毫秒
      stat-view-servlet: # 配置 StatViewServlet ，对应文档 https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE
        enabled: true # 是否开启 StatViewServlet
        login-username: yudaoyuanma # 账号
        login-password: javaniubi # 密码
#    filters: stat
#    maxActive: 100
#    initialSize: 100
#    maxWait: 600
#    minIdle: 50
#    timeBetweenEvictionRunsMillis: 60000
#    minEvictableIdleTimeMillis: 300000
#    validationQuery: select 'x'
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    poolPreparedStatements: true
#    maxOpenPreparedStatements: 20

  # redis配置
  redis:
    cluster:
      nodes: 61.135.216.3:7000,61.135.216.3:7001,61.135.216.3:7002
#      nodes: 192.168.57.129:7001,192.168.57.129:7002,192.168.57.129:7003,192.168.57.129:7004,192.168.57.129:7005,192.168.57.129:7006
    timeout: 500
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数，默认为 8 。使用负数表示没有限制。
        max-idle: 8 # 默认连接数最小空闲的连接数，默认为 8 。使用负数表示没有限制。
        min-idle: 0 # 默认连接池最小空闲的连接数，默认为 0 。允许设置 0 和 正数。
        max-wait: -1 # 连接池最大阻塞等待时间，单位：毫秒。默认为 -1 ，表示不限制。


  ## kafka 配置
  kafka:
    bootstrap-servers:
      - eadata-kafka0:6666
#      - 192.168.57.129:9092
#      - 192.168.57.129:9093
    producer:
      #设置大于0的值将使客户端重新发送任何数据，一旦这些数据发送失败。注意，这些重试与客户端接收到发送错误时的重试没有什么不同。
      # 允许重试将潜在的改变数据的顺序，如果这两个消息记录都是发送到同一个partition，则第一个消息失败第二个发送成功，
      # 则第二条消息会比第一条消息出现要早。
      retries: 0
      #每批次发送消息的数量
      batch-size: 16384
      #producer可以用来缓存数据的内存大小。如果数据产生速度大于向broker发送的速度，producer会阻塞或者抛出异常，以“block.on.buffer.full”来表明。这项设置将和producer能够使用的总内存相关，但并不是一个硬性的限制，因为不是producer使用的所有内存都是用于缓存。一些额外的内存会用于压缩（如果引入压缩机制），同样还有一些用于维护请求。
      buffer-memory: 33554432
      #key序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: default
      #Kafka中没有初始偏移或如果当前偏移在服务器上不再存在时,默认区最新 ，有三个选项 【latest, earliest, none】
      auto-offset-reset: latest
      enable-auto-commit: true
      auto-commit-interval: 100
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

#  rabbitmq:
#    host: 127.0.0.1
#    username : guest
#    password: guest
#    virtual-host: /
#    listener:
#      simple:
#        concurrency: 10
#        max-concurrency: 10
#        prefetch: 1
#        auto-startup: true
#        default-requeue-rejected: true
#        acknowledge-mode: manual
    template:
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3
        max-interval: 10000
        multiplier: 1.0
    publisher-confirm-type: correlated

  thymeleaf:
    prefix: classpath:/templates/
    suffix: html
    cache: false
    enabled: true
    encoding: UTF-8
    mode: HTML5
    servlet:
      content-type: text/html

  resources:
    add-mappings: true
    chain:
      cache: true
      enabled: true
      html-application-cache: true
      compressed: true
    static-locations: classpath:/static/
    cache:
      period: 3600


pageCache:
  enable: true

mybatis:
  type-aliases-package: com.geekq.miaosha.domain
  configuration:
    map-underscore-to-camel-case: true
  mapperLocations: classpath:com/geekq/miaosha/dao/*.xml

log4j:
  logger:
    com:
      ibatis: DEBUG

    com.ibatis.common.jdbc.SimpleDataSource: DEBUG
    com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate: DEBUG
    Java:
      sql:
        Connection: DEBUG
        Statement: DEBUG
        PreparedStatement: DEBUG

server:
  tomcat:
    max-connections: 3000
    max-threads: 1000
    max-http-form-post-size: 6MB
